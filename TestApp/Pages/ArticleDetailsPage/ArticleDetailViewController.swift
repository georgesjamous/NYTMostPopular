//
//  ArticleDetailViewController.swift
//  TestApp
//
//  Created by Georges on 12/5/20.
//  Copyright (c) 2020 Xeronium. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

// ArticleDetailsController simple Controller that shows info about the article

final class ArticleDetailViewController: UITableViewController {

    var article: Article? = nil
    
    // MARK: - Public properties -

    var presenter: ArticleDetailPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        buildUIOnLoad()
        presenter.viewLoaded()
    }

}

// MARK: Builder

extension ArticleDetailViewController {
    private enum Constants {
        static let ImageCellIdentifier = "Cell0"
        static let InfoCellIdentifier = "Cell1"
        static let HeaderSize = 250.00
    }
    
    // MARK: Building The View
    
    private func buildUIOnLoad(){
        self.title = "Details"
        
        self.tableView.estimatedRowHeight = 200 // no important
        self.tableView.rowHeight = UITableView.automaticDimension
        self.tableView.register(UITableViewCell.self, forCellReuseIdentifier: Constants.InfoCellIdentifier)
        self.tableView.register(ImageTableViewCell.self, forCellReuseIdentifier: Constants.ImageCellIdentifier)
        self.tableView.separatorStyle = UITableViewCell.SeparatorStyle.none
    }
    
    // MARK: TableView Delegate
    
    private func getIdentifierForIndexPath(indexPath: IndexPath) -> String {
        return indexPath.row == 0 ? Constants.ImageCellIdentifier : Constants.InfoCellIdentifier
    }
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        // First Index is for the image
        if indexPath.row == 0 {
            return CGFloat(Constants.HeaderSize)
        }
        // auto-size auther cells
        return UITableView.automaticDimension
    }
    
    // MARK: TableView Data Source
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // replace by am enum!
        // 1- image
        // 2- date
        // 3- title
        // 4- subtitle
        // 5- column / section
        return article == nil ? 0 : 4
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let selectedArticle = article else {
            fatalError("This path is strictly restricted to article")
        }
        
        let id = getIdentifierForIndexPath(indexPath: indexPath)
        let cell = tableView.dequeueReusableCell(withIdentifier: id, for: indexPath)
        
        if indexPath.row == 0 {
            if let imageCell = cell as? ImageTableViewCell {
                imageCell.article = selectedArticle
                return cell
            }
            Logger.Warn(message: "Unsopported Image Cell Class Detected. Check if 'ImageTableViewCell' has been registered.")
            return cell
        }
        
        switch indexPath.row {
        case 1:
            cell.textLabel?.text = selectedArticle.published_date
            cell.textLabel?.numberOfLines = 1
            cell.textLabel?.font = UIFont.boldSystemFont(ofSize: AppTheme.FontSize.Footnote)
            cell.textLabel?.textColor = AppTheme.Colors.TextSecondary
        case 2:
            cell.textLabel?.text = selectedArticle.title
            cell.textLabel?.numberOfLines = 4
            cell.textLabel?.font = UIFont.boldSystemFont(ofSize: AppTheme.FontSize.Headline)
            cell.textLabel?.textColor = AppTheme.Colors.TextPrimary
        case 3:
            cell.textLabel?.text = selectedArticle.abstract
            cell.textLabel?.numberOfLines = 0
            cell.textLabel?.font = UIFont.systemFont(ofSize: AppTheme.FontSize.Body)
            cell.textLabel?.textColor = AppTheme.Colors.TextPrimary
        case 4:
            cell.textLabel?.text = selectedArticle.section
            cell.textLabel?.numberOfLines = 2
            cell.textLabel?.font = UIFont.systemFont(ofSize: AppTheme.FontSize.Footnote)
            cell.textLabel?.textColor = AppTheme.Colors.TextPrimary
            
            cell.detailTextLabel?.text = selectedArticle.column
            cell.detailTextLabel?.numberOfLines = 2
            cell.detailTextLabel?.font = UIFont.systemFont(ofSize: AppTheme.FontSize.Footnote)
            cell.detailTextLabel?.textColor = AppTheme.Colors.TextSecondary
        default:
            Logger.Warn(message: "Unrecognized cell index \(indexPath)")
        }
        
        return cell
    }
}


// MARK: - Extensions -

extension ArticleDetailViewController: ArticleDetailViewInterface {
    func article(_ article: Article) {
        self.article = article
        self.tableView.reloadData()
    }
}
